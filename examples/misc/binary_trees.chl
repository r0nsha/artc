use std.fmt.println
use std.c.{printf, malloc}

type Node = struct {
    l: *mut Node,
    r: *mut Node
}

fn node_check(node: *Node) -> i32 = {
    let mut result = 1

    if (node.l as uint) != 0 {
        result += node_check(node.l)
    } 
    
    if (node.r as uint) != 0 {
        result += node_check(node.r)
    }

    result
}

fn node_create(depth: i32) -> *mut Node = {
    let node = malloc(size_of!(Node)) as *mut Node

    if depth > 0 {
        node.l = node_create(depth - 1)
        node.r = node_create(depth - 1)
    }

    node
}

let min_depth: i32 = 4

fn main() = {
    let n = 10

    let max_depth = if min_depth + 2 > n { min_depth + 2 } else { n }

    let depth = max_depth + 1
    let node = node_create(depth)
    printf("stretch tree of depth: %d\ncheck: %d\n".ptr, depth, node_check(node))
}